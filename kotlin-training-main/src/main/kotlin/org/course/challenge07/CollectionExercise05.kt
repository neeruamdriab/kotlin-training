package org.course.challenge07

/**
 * Solve Euler problem number 2: https://projecteuler.net/problem=2. The problem states:
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */
object CollectionExercise05 {


    /**
     * A) Use a Sequence<T> to generates the fibonacci numeric sequence as mentioned above: (1,2,3,5,8 etc.)
     * Hint: the mathematical sequence looks like 0,1,1,2,3,5 etc., so make sure you drop the first 2 elements
     */
    fun fibonacci():Sequence<Int> = TODO("fix me")

    /**
     * B) Use the above fibonacci sequence to solve Euler problem No 2:
     * 'Find the sum of the even-valued terms (even numbers) whose values do not exceed four million (4_000_000)'
     * Implement the eulerProblem2 method that takes a max parameter which represents the ceiling to which the
     * fibonacci sequence needs to be generated.
     */
    fun eulerProblem2(max: Int):Int = TODO("fix me")
}

